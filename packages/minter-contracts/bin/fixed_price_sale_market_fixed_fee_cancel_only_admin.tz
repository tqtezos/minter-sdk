{ parameter
    (or (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
                (nat %buy))
            (or (nat %cancel)
                (pair %sell
                   (nat %price)
                   (pair (pair %sale_token (address %fa2_address) (nat %token_id))
                         (pair (pair %money_token (address %fa2_address) (nat %token_id)) (nat %amount))))))
        (never %update_allowed)) ;
  storage
    (pair (big_map %sales
             nat
             (pair (address %seller)
                   (pair %sale_data
                      (nat %price)
                      (pair (pair %sale_token (address %fa2_address) (nat %token_id))
                            (pair (pair %money_token (address %fa2_address) (nat %token_id)) (nat %amount))))))
          (pair (option %admin
                   (pair (pair (address %admin) (bool %paused)) (option %pending_admin address)))
                (pair (nat %next_sale_id)
                      (pair (unit %allowlist) (pair %fee (address %fee_address) (nat %fee_percent)))))) ;
  code { LAMBDA
           (option (pair (pair address bool) (option address)))
           unit
           { IF_NONE
               { UNIT }
               { CAR ;
                 CAR ;
                 SENDER ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } } ;
         LAMBDA
           (option (pair (pair address bool) (option address)))
           unit
           { IF_NONE
               { UNIT }
               { CAR ; CDR ; IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } } } ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         LAMBDA
           (pair (pair (pair address nat) (pair nat address)) address)
           operation
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 2 ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE
               { DROP 4 ; PUSH string "CANNOT_INVOKE_FA2_TRANSFER" ; FAILWITH }
               { PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 DIG 4 ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 7 ;
                 DIG 7 ;
                 DIG 7 ;
                 SWAP ;
                 PAIR ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 SWAP ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS } } ;
         LAMBDA
           (pair nat
                 (pair (big_map
                          nat
                          (pair address (pair nat (pair (pair address nat) (pair (pair address nat) nat)))))
                       (pair (option (pair (pair address bool) (option address)))
                             (pair nat (pair unit (pair address nat))))))
           (pair address (pair nat (pair (pair address nat) (pair (pair address nat) nat))))
           { UNPAIR ;
             SWAP ;
             CAR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "NO_SALE" ; FAILWITH } {} } ;
         DIG 5 ;
         UNPAIR ;
         PUSH string "ANY_ENTRYPOINT" ;
         PUSH string "DONT_TRANSFER_TEZ_TO_" ;
         CONCAT ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         PAIR ;
         DUP 6 ;
         SWAP ;
         EXEC ;
         DROP ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 4 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DIG 3 ;
                             DROP 2 ;
                             IF_NONE
                               { PUSH string "NO_ADMIN_CAPABILITIES_CONFIGURED" ; FAILWITH }
                               { DUP ;
                                 CDR ;
                                 IF_NONE
                                   { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                                   { SENDER ;
                                     COMPARE ;
                                     EQ ;
                                     IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR ; SOME }
                                        { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             IF_NONE
                               { DROP ; PUSH string "NO_ADMIN_CAPABILITIES_CONFIGURED" ; FAILWITH }
                               { DUP ; CDR ; DUG 2 ; CAR ; CAR ; PAIR ; PAIR ; SOME } ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         IF_NONE
                           { DROP ; PUSH string "NO_ADMIN_CAPABILITIES_CONFIGURED" ; FAILWITH }
                           { SWAP ; SOME ; SWAP ; CAR ; PAIR ; SOME } ;
                         NIL operation ;
                         PAIR } ;
                     UNPAIR ;
                     DUG 2 ;
                     UPDATE 3 ;
                     SWAP ;
                     PAIR }
                   { DIG 6 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "FEE_TOO_HIGH" ;
                     PUSH nat 100 ;
                     DUP 4 ;
                     GET 8 ;
                     CDR ;
                     COMPARE ;
                     LE ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CDR ;
                     CAR ;
                     SENDER ;
                     SELF_ADDRESS ;
                     PUSH nat 1 ;
                     PAIR ;
                     DUP 4 ;
                     CDR ;
                     GET 3 ;
                     CDR ;
                     DUP 5 ;
                     CDR ;
                     GET 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP 6 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     DUP 6 ;
                     GET 8 ;
                     CDR ;
                     PUSH nat 100 ;
                     SWAP ;
                     DIG 2 ;
                     MUL ;
                     EDIV ;
                     IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                     CAR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     DUP 4 ;
                     CAR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     DUP 5 ;
                     GET 8 ;
                     CAR ;
                     DIG 2 ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     GET 5 ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     GET 5 ;
                     CDR ;
                     DIG 2 ;
                     UNPAIR ;
                     DIG 4 ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP 4 ;
                     SWAP ;
                     SUB ;
                     ISNAT ;
                     IF_NONE { PUSH string "FEE_TOO_HIGH" ; FAILWITH } {} ;
                     DIG 4 ;
                     SENDER ;
                     DIG 5 ;
                     PAIR ;
                     DUP 6 ;
                     DUP 8 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP 10 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     SENDER ;
                     DIG 3 ;
                     PAIR ;
                     DIG 4 ;
                     DIG 5 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 6 ;
                     SWAP ;
                     EXEC ;
                     DUG 2 ;
                     CONS ;
                     SWAP ;
                     CONS ;
                     PUSH nat 1 ;
                     DUP 3 ;
                     CDR ;
                     GET 6 ;
                     COMPARE ;
                     LE ;
                     IF { SWAP ;
                          DROP ;
                          DUP 3 ;
                          CAR ;
                          DIG 2 ;
                          NONE (pair address (pair nat (pair (pair address nat) (pair (pair address nat) nat)))) ;
                          SWAP ;
                          UPDATE }
                        { DUP 4 ;
                          CAR ;
                          DIG 2 ;
                          DUP ;
                          DUP ;
                          DUG 4 ;
                          CDR ;
                          PUSH nat 1 ;
                          DIG 5 ;
                          CDR ;
                          GET 6 ;
                          SUB ;
                          ABS ;
                          UPDATE 6 ;
                          UPDATE 2 ;
                          SOME ;
                          DIG 3 ;
                          UPDATE } ;
                     DIG 2 ;
                     SWAP ;
                     UPDATE 1 ;
                     SWAP ;
                     PAIR } }
               { DIG 6 ;
                 DROP ;
                 IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DUP ;
                     CAR ;
                     DUP ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { UNIT }
                        { PUSH string "OR_A_SELLER" ;
                          DUP 5 ;
                          GET 3 ;
                          IF_NONE
                            { DROP ; UNIT }
                            { CAR ;
                              CAR ;
                              SENDER ;
                              COMPARE ;
                              NEQ ;
                              IF { PUSH string "_" ; CONCAT ; PUSH string "NOT_AN_ADMIN" ; CONCAT ; FAILWITH }
                                 { DROP ; UNIT } } } ;
                     DROP ;
                     SELF_ADDRESS ;
                     DUP 3 ;
                     CDR ;
                     GET 6 ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     GET 3 ;
                     CDR ;
                     DIG 3 ;
                     CDR ;
                     GET 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     DIG 3 ;
                     NONE (pair address (pair nat (pair (pair address nat) (pair (pair address nat) nat)))) ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 1 ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET 3 ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "FEE_TOO_HIGH" ;
                     PUSH nat 100 ;
                     DUP 4 ;
                     GET 8 ;
                     CDR ;
                     COMPARE ;
                     LE ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SELF_ADDRESS ;
                     SENDER ;
                     DUP 3 ;
                     GET 6 ;
                     PAIR ;
                     DUP 3 ;
                     GET 3 ;
                     CDR ;
                     DUP 4 ;
                     GET 3 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     SENDER ;
                     DIG 2 ;
                     SWAP ;
                     PAIR ;
                     DUP 3 ;
                     GET 5 ;
                     DIG 3 ;
                     DUP ;
                     CAR ;
                     DIG 3 ;
                     DUP 4 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     UPDATE 1 ;
                     PUSH nat 1 ;
                     DIG 2 ;
                     ADD ;
                     UPDATE 5 ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } }
           { DIG 2 ; DIG 3 ; DIG 4 ; DIG 5 ; DIG 6 ; DROP 5 ; SWAP ; DROP ; NEVER } } }

