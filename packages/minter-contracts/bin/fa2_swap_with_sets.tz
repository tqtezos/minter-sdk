{ parameter
    (or (or (pair %accept (nat %swap_id) (set %tokens (pair nat nat))) (set %add_set nat))
        (or (nat %cancel)
            (pair %start
               (pair %swap_offer
                  (list %assets_offered
                     (pair (address %fa2_address) (list %tokens (pair (nat %token_id) (nat %amount)))))
                  (list %assets_requested nat))
               (nat %remaining_offers)))) ;
  storage
    (pair (pair (pair (address %fa2_address) (nat %next_set_id))
                (pair (nat %next_swap_id) (big_map %sets nat (set nat))))
          (big_map %swaps
             nat
             (pair (pair %swap_offers
                      (pair %swap_offer
                         (list %assets_offered
                            (pair (address %fa2_address) (list %tokens (pair (nat %token_id) (nat %amount)))))
                         (list %assets_requested nat))
                      (nat %remaining_offers))
                   (address %seller)))) ;
  code { LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         PUSH string "XTZ_TRANSFER" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         PAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         EXEC ;
         DROP ;
         LAMBDA
           (pair (pair (pair address address) (pair nat string)) address)
           (lambda (list (pair nat nat)) operation)
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PAIR 5 ;
             LAMBDA
               (pair (pair nat (pair string (pair address (pair address address)))) (list (pair nat nat)))
               operation
               { UNPAIR ;
                 UNPAIR 5 ;
                 DIG 5 ;
                 DIG 2 ;
                 DIG 5 ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                 IF_NONE { FAILWITH } { SWAP ; DROP } ;
                 SWAP ;
                 MAP { DUP 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       MUL ;
                       SWAP ;
                       CAR ;
                       PAIR ;
                       DUP 5 ;
                       PAIR } ;
                 DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 2 ;
                 PAIR ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 DIG 3 ;
                 CONS ;
                 TRANSFER_TOKENS } ;
             SWAP ;
             APPLY } ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair (pair (pair address address) (pair nat string)) address)
                    (lambda (list (pair nat nat)) operation))
                 (pair (pair address address) (pair nat string)))
           (lambda (pair address (list (pair nat nat))) operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PAIR 5 ;
             LAMBDA
               (pair (pair nat
                           (pair string
                                 (pair address
                                       (pair address
                                             (lambda
                                                (pair (pair (pair address address) (pair nat string)) address)
                                                (lambda (list (pair nat nat)) operation))))))
                     (pair address (list (pair nat nat))))
               operation
               { UNPAIR ;
                 UNPAIR 5 ;
                 DIG 5 ;
                 UNPAIR ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 DIG 4 ;
                 DIG 4 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 EXEC } ;
             SWAP ;
             APPLY } ;
         SWAP ;
         APPLY ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { UNPAIR ;
                 NIL nat ;
                 DIG 2 ;
                 ITER { CDR ; CONS } ;
                 DUP 3 ;
                 DUP 3 ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 GET ;
                 IF_NONE { PUSH string "SWAP_NOT_EXIST" ; FAILWITH } {} ;
                 PUSH string "NUMBER_OF_TOKENS_SENT_MUST_EQUAL_NUMBER_REQUESTED" ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 SIZE ;
                 DUP 4 ;
                 SIZE ;
                 COMPARE ;
                 EQ ;
                 PAIR ;
                 DUP 8 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 ITER { SWAP ;
                        IF_CONS
                          { DUP 7 ;
                            CAR ;
                            CDR ;
                            CDR ;
                            SWAP ;
                            GET ;
                            IF_NONE { PUSH string "INVALID_SET_ID" ; FAILWITH } {} ;
                            PUSH string "INVALID_TOKEN" ;
                            SWAP ;
                            DIG 3 ;
                            MEM ;
                            PAIR ;
                            DUP 9 ;
                            SWAP ;
                            EXEC ;
                            DROP }
                          { DROP ; PUSH string "INTERNAL_ERROR" ; FAILWITH } } ;
                 DIG 7 ;
                 DROP 2 ;
                 PUSH nat 1 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 IF { DUP 4 ;
                      CDR ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      PUSH nat 1 ;
                      DUP 4 ;
                      CAR ;
                      CDR ;
                      SUB ;
                      ABS ;
                      DUP 4 ;
                      CAR ;
                      CAR ;
                      PAIR ;
                      PAIR ;
                      SOME ;
                      DIG 4 ;
                      UPDATE ;
                      DIG 3 ;
                      CAR ;
                      PAIR }
                    { DUP 4 ;
                      CDR ;
                      DIG 3 ;
                      NONE (pair (pair (pair (list (pair address (list (pair nat nat)))) (list nat)) nat) address) ;
                      SWAP ;
                      UPDATE ;
                      DIG 3 ;
                      CAR ;
                      PAIR } ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 MAP { PUSH string "SWAP_OFFERED_FA2_INVALID" ;
                       PUSH nat 1 ;
                       PAIR ;
                       SENDER ;
                       SELF_ADDRESS ;
                       PAIR ;
                       PAIR ;
                       DUP 6 ;
                       SWAP ;
                       EXEC ;
                       SWAP ;
                       EXEC } ;
                 DIG 4 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PUSH string "SWAP_REQUESTED_FA2_INVALID" ;
                 PUSH nat 1 ;
                 PAIR ;
                 DIG 4 ;
                 CDR ;
                 SENDER ;
                 DIG 2 ;
                 UNPAIR ;
                 DIG 8 ;
                 DUG 5 ;
                 PAIR 6 ;
                 LAMBDA
                   (pair (pair nat
                               (pair string
                                     (pair address
                                           (pair address
                                                 (pair address
                                                       (lambda
                                                          (pair (pair (pair address address) (pair nat string)) address)
                                                          (lambda (list (pair nat nat)) operation)))))))
                         (list nat))
                   operation
                   { UNPAIR ;
                     UNPAIR 6 ;
                     DIG 6 ;
                     MAP { PUSH nat 1 ; SWAP ; PAIR } ;
                     DIG 5 ;
                     DIG 3 ;
                     DIG 3 ;
                     PAIR ;
                     DIG 4 ;
                     DIG 4 ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 2 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     EXEC } ;
                 SWAP ;
                 APPLY ;
                 DIG 3 ;
                 EXEC ;
                 CONS ;
                 PAIR }
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 DUP 4 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 PUSH nat 1 ;
                 DIG 4 ;
                 ADD ;
                 DIG 3 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } }
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { DIG 3 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 SWAP ;
                 CDR ;
                 SWAP ;
                 GET ;
                 IF_NONE { PUSH string "SWAP_NOT_EXIST" ; FAILWITH } {} ;
                 SENDER ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "NOT_SWAP_SELLER" ; FAILWITH } ;
                 DUP ;
                 CAR ;
                 CAR ;
                 CAR ;
                 MAP { PUSH string "SWAP_OFFERED_FA2_INVALID" ;
                       DUP 3 ;
                       CAR ;
                       CDR ;
                       PAIR ;
                       DUP 3 ;
                       CDR ;
                       SELF_ADDRESS ;
                       PAIR ;
                       PAIR ;
                       DUP 6 ;
                       SWAP ;
                       EXEC ;
                       SWAP ;
                       EXEC } ;
                 SWAP ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DUP 3 ;
                 CDR ;
                 DIG 2 ;
                 NONE (pair (pair (pair (list (pair address (list (pair nat nat)))) (list nat)) nat) address) ;
                 SWAP ;
                 UPDATE ;
                 DIG 2 ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 PAIR }
               { PUSH string "OFFERS_MUST_BE_NONZERO" ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SENDER ;
                 DUP 3 ;
                 CDR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CDR ;
                 PUSH nat 1 ;
                 DUP 6 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 DUP 4 ;
                 CDR ;
                 DUP 3 ;
                 DUP 5 ;
                 PAIR ;
                 DIG 5 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 MAP { PUSH string "SWAP_OFFERED_FA2_INVALID" ;
                       DUP 5 ;
                       CDR ;
                       PAIR ;
                       SELF_ADDRESS ;
                       DUP 5 ;
                       PAIR ;
                       PAIR ;
                       DUP 6 ;
                       SWAP ;
                       EXEC ;
                       SWAP ;
                       EXEC } ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 PAIR } } } }

