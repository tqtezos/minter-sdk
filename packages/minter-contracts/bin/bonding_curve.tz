{ parameter
    (or (or (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
                (unit %buy))
            (or (address %buy_offchain) (nat %sell)))
        (or (or (pair %sell_offchain nat address) (option %set_delegate key_hash))
            (unit %withdraw))) ;
  storage
    (pair (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
          (pair (address %market_contract)
                (pair (mutez %auction_price)
                      (pair (nat %token_index)
                            (pair (map %token_metadata string bytes)
                                  (pair (nat %basis_points) (pair (lambda %cost_mutez nat mutez) (mutez %unclaimed)))))))) ;
  code { LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair address
                 (pair (pair (pair address bool) (option address))
                       (pair address
                             (pair mutez (pair nat (pair (map string bytes) (pair nat (pair (lambda nat mutez) mutez))))))))
           (pair (list operation)
                 (pair (pair (pair address bool) (option address))
                       (pair address
                             (pair mutez (pair nat (pair (map string bytes) (pair nat (pair (lambda nat mutez) mutez))))))))
           { UNPAIR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             DUP 3 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             CDR ;
             CDR ;
             CAR ;
             ADD ;
             PUSH nat 10000 ;
             DUP 4 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             DUP 3 ;
             MUL ;
             EDIV ;
             IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
             CAR ;
             DUP ;
             DUP 3 ;
             ADD ;
             AMOUNT ;
             COMPARE ;
             NEQ ;
             IF { DIG 2 ;
                  DROP ;
                  DIG 2 ;
                  DROP ;
                  ADD ;
                  AMOUNT ;
                  PUSH string "WRONG_TEZ_PRICE" ;
                  PAIR ;
                  PAIR ;
                  FAILWITH }
                { SWAP ;
                  DROP ;
                  DUP 3 ;
                  CDR ;
                  CAR ;
                  CONTRACT %mint
                    (list (pair (pair %token_metadata (nat %token_id) (map %token_info string bytes))
                                (address %owner))) ;
                  IF_NONE
                    { SWAP ; DROP ; PUSH string "NO_MINT" ; FAILWITH }
                    { PUSH mutez 0 ;
                      NIL (pair (pair nat (map string bytes)) address) ;
                      DIG 4 ;
                      DUP 6 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PUSH nat 0 ;
                      PAIR ;
                      PAIR ;
                      CONS ;
                      TRANSFER_TOKENS } ;
                  DUP 3 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  PUSH nat 1 ;
                  DUP 5 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  ADD ;
                  PAIR ;
                  DUP 4 ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  DUP 4 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  DUP 4 ;
                  CAR ;
                  PAIR ;
                  DIG 2 ;
                  DIG 3 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  ADD ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR ;
                  NIL operation ;
                  DIG 2 ;
                  CONS ;
                  PAIR } } ;
         LAMBDA
           (pair (pair nat address)
                 (pair (pair (pair address bool) (option address))
                       (pair address
                             (pair mutez (pair nat (pair (map string bytes) (pair nat (pair (lambda nat mutez) mutez))))))))
           (pair (list operation)
                 (pair (pair (pair address bool) (option address))
                       (pair address
                             (pair mutez (pair nat (pair (map string bytes) (pair nat (pair (lambda nat mutez) mutez))))))))
           { UNPAIR ;
             UNPAIR ;
             PUSH nat 1 ;
             DUP 4 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SUB ;
             ISNAT ;
             IF_NONE { PUSH string "NO_TOKENS" ; FAILWITH } {} ;
             DUP ;
             DUP 5 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             EXEC ;
             DUP 5 ;
             CDR ;
             CAR ;
             CONTRACT %burn (pair nat (pair bytes address)) ;
             DUP 6 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             PUSH string "symbol" ;
             GET ;
             IF_NONE { PUSH string "NO_SYMBOL" ; FAILWITH } {} ;
             SWAP ;
             IF_NONE
               { DROP ; DIG 2 ; DROP ; PUSH string "NO_BURN" ; FAILWITH }
               { PUSH mutez 0 ; DUP 7 ; DIG 3 ; PAIR ; DIG 5 ; PAIR ; TRANSFER_TOKENS } ;
             DIG 3 ;
             CONTRACT unit ;
             IF_NONE
               { DROP 2 ; PUSH string "CANT_RETURN" ; FAILWITH }
               { DUP 3 ;
                 PUSH mutez 0 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP ; SWAP ; DROP ; NIL operation }
                    { NIL operation ; SWAP ; DIG 3 ; UNIT ; TRANSFER_TOKENS ; CONS } ;
                 SWAP ;
                 CONS } ;
             DUP 3 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             DIG 2 ;
             PAIR ;
             DUP 3 ;
             CDR ;
             CDR ;
             CAR ;
             PAIR ;
             DUP 3 ;
             CDR ;
             CAR ;
             PAIR ;
             DIG 2 ;
             CAR ;
             PAIR ;
             SWAP ;
             PAIR } ;
         DIG 3 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 2 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             IF_NONE
                               { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                    { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SOME ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     UNPAIR ;
                     DIG 2 ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DROP ; DIG 2 ; DROP ; SENDER ; PAIR ; EXEC } }
               { IF_LEFT
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PAIR ;
                     EXEC }
                   { DIG 3 ; DROP ; DIG 3 ; DROP ; SWAP ; SENDER ; DIG 2 ; PAIR ; PAIR ; EXEC } } }
           { DIG 3 ;
             DROP ;
             IF_LEFT
               { IF_LEFT
                   { SWAP ; DUP ; DUG 2 ; CAR ; DIG 4 ; SWAP ; EXEC ; DROP ; PAIR ; EXEC }
                   { DIG 2 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     NIL operation ;
                     SWAP ;
                     SET_DELEGATE ;
                     CONS ;
                     PAIR } }
               { DROP ;
                 SWAP ;
                 DROP ;
                 DUP ;
                 CAR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH mutez 0 ;
                 COMPARE ;
                 LT ;
                 IF { DUP ;
                      CAR ;
                      CAR ;
                      CAR ;
                      CONTRACT unit ;
                      IF_NONE { PUSH string "ADDRESS_DOES_NOT_RESOLVE" ; FAILWITH } {} ;
                      SWAP ;
                      DUP ;
                      DUG 2 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      PUSH unit Unit ;
                      TRANSFER_TOKENS ;
                      PUSH mutez 0 ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DUP 3 ;
                      CDR ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DUP 3 ;
                      CDR ;
                      CAR ;
                      PAIR ;
                      DIG 2 ;
                      CAR ;
                      PAIR ;
                      NIL operation ;
                      DIG 2 ;
                      CONS ;
                      PAIR }
                    { DROP ; PUSH string "UNCLAIMED=0" ; FAILWITH } } } } }

