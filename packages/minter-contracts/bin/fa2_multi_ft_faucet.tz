{ parameter
    (or (or %assets
           (or (pair %balance_of
                  (list %requests (pair (address %owner) (nat %token_id)))
                  (contract %callback
                     (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance)))))
               (list %transfer
                  (pair (address %from_)
                        (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))))
           (list %update_operators
              (or (pair %add_operator (address %owner) (pair (address %operator) (nat %token_id)))
                  (pair %remove_operator (address %owner) (pair (address %operator) (nat %token_id))))))
        (or %tokens
           (or (list %burn_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount))))
               (pair %create_token (nat %token_id) (map %token_info string bytes)))
           (list %mint_tokens (pair (address %owner) (pair (nat %token_id) (nat %amount)))))) ;
  storage
    (pair (pair %assets
             (pair (big_map %ledger (pair address nat) nat)
                   (big_map %operators (pair address (pair address nat)) unit))
             (pair (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
                   (big_map %token_total_supply nat nat)))
          (big_map %metadata string bytes)) ;
  code { PUSH string "FA2_TOKEN_UNDEFINED" ;
         PUSH string "FA2_INSUFFICIENT_BALANCE" ;
         LAMBDA
           (pair (pair address nat) (big_map (pair address nat) nat))
           nat
           { UNPAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         DUP ;
         LAMBDA
           (pair (lambda (pair (pair address nat) (big_map (pair address nat) nat)) nat)
                 (pair (pair address nat) (pair nat (big_map (pair address nat) nat))))
           (big_map (pair address nat) nat)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DUP 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             ADD ;
             PUSH nat 0 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; NONE nat ; SWAP ; UPDATE }
                { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } ;
         SWAP ;
         APPLY ;
         DUP 3 ;
         DUP 3 ;
         PAIR ;
         LAMBDA
           (pair (pair (lambda (pair (pair address nat) (big_map (pair address nat) nat)) nat) string)
                 (pair (pair address nat) (pair nat (big_map (pair address nat) nat))))
           (big_map (pair address nat) nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 3 ;
             DIG 3 ;
             PAIR ;
             DUP 3 ;
             SWAP ;
             DUP ;
             DUG 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             SWAP ;
             SUB ;
             ISNAT ;
             IF_NONE
               { DROP 2 ; FAILWITH }
               { DIG 3 ;
                 DROP ;
                 PUSH nat 0 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 COMPARE ;
                 EQ ;
                 IF { DROP ; NONE nat ; SWAP ; UPDATE }
                    { DIG 2 ; SWAP ; SOME ; DIG 2 ; UPDATE } } } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { DIG 5 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DIG 4 ;
                     DROP 2 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     CAR ;
                     MAP { DUP 4 ;
                           SWAP ;
                           DUP ;
                           DUG 2 ;
                           CDR ;
                           MEM ;
                           NOT ;
                           IF { DROP ; DUP 7 ; FAILWITH }
                              { DUP 3 ;
                                SWAP ;
                                DUP ;
                                DUG 2 ;
                                CDR ;
                                DUP 3 ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                DUP 8 ;
                                SWAP ;
                                EXEC ;
                                SWAP ;
                                PAIR } } ;
                     DIG 2 ;
                     DIG 3 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 4 ;
                     SWAP ;
                     CDR ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR }
                   { DIG 5 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     LAMBDA
                       (pair (pair address address) (pair nat (big_map (pair address (pair address nat)) unit)))
                       unit
                       { UNPAIR ;
                         UNPAIR ;
                         DIG 2 ;
                         UNPAIR ;
                         DUP 4 ;
                         DUP 4 ;
                         COMPARE ;
                         EQ ;
                         IF { DROP 4 ; UNIT }
                            { DIG 3 ;
                              PAIR ;
                              DIG 2 ;
                              PAIR ;
                              MEM ;
                              IF { UNIT } { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } } } ;
                     DIG 2 ;
                     DUP 3 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     ITER { DUP ;
                            DUG 2 ;
                            CDR ;
                            ITER { SWAP ;
                                   DUP 5 ;
                                   CDR ;
                                   CAR ;
                                   DUP 3 ;
                                   GET 3 ;
                                   MEM ;
                                   NOT ;
                                   IF { DROP 2 ; DUP 8 ; FAILWITH }
                                      { DUP 5 ;
                                        CAR ;
                                        CDR ;
                                        DUP 3 ;
                                        GET 3 ;
                                        PAIR ;
                                        SENDER ;
                                        DUP 5 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        DROP ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 4 ;
                                        PAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        DUP 4 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 8 ;
                                        SWAP ;
                                        EXEC ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 4 ;
                                        PAIR ;
                                        SWAP ;
                                        DUP ;
                                        DUG 2 ;
                                        GET 3 ;
                                        DIG 2 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 8 ;
                                        SWAP ;
                                        EXEC } } ;
                            SWAP ;
                            DROP } ;
                     SWAP ;
                     DIG 2 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 5 ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     DIG 2 ;
                     CAR ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } }
               { DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 4 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CDR ;
                 SWAP ;
                 SENDER ;
                 DUG 2 ;
                 ITER { SWAP ;
                        DUP 3 ;
                        DUP 3 ;
                        IF_LEFT {} {} ;
                        CAR ;
                        COMPARE ;
                        EQ ;
                        IF {} { PUSH string "FA2_NOT_OWNER" ; FAILWITH } ;
                        SWAP ;
                        IF_LEFT
                          { SWAP ;
                            UNIT ;
                            SOME ;
                            DUP 3 ;
                            GET 4 ;
                            DUP 4 ;
                            GET 3 ;
                            PAIR ;
                            DIG 3 ;
                            CAR ;
                            PAIR ;
                            UPDATE }
                          { DUP ;
                            DUG 2 ;
                            GET 4 ;
                            DUP 3 ;
                            GET 3 ;
                            PAIR ;
                            DIG 2 ;
                            CAR ;
                            PAIR ;
                            NONE unit ;
                            SWAP ;
                            UPDATE } } ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 SWAP ;
                 DIG 2 ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } ;
             UNPAIR ;
             DIG 2 ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             PAIR }
           { DIG 4 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             IF_LEFT
               { DIG 4 ;
                 DROP ;
                 IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     ITER { DUP ;
                            DUG 2 ;
                            GET 4 ;
                            PAIR ;
                            SWAP ;
                            DUP ;
                            DUG 2 ;
                            GET 3 ;
                            DIG 2 ;
                            CAR ;
                            PAIR ;
                            PAIR ;
                            DUP 5 ;
                            SWAP ;
                            EXEC } ;
                     DIG 4 ;
                     DROP ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     DIG 2 ;
                     ITER { SWAP ;
                            DUP ;
                            DUP 3 ;
                            GET 3 ;
                            GET ;
                            IF_NONE
                              { DROP 2 ; DUP 5 ; FAILWITH }
                              { DUP 3 ;
                                GET 4 ;
                                SWAP ;
                                SUB ;
                                ISNAT ;
                                IF_NONE { DUP 6 ; FAILWITH } {} ;
                                SOME ;
                                DIG 2 ;
                                GET 3 ;
                                UPDATE } } ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 2 ;
                     DUP 3 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 3 ;
                     DUP ;
                     CAR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { DUP 3 ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         DIG 3 ;
                         DUP 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         PAIR ;
                         DUP 3 ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CDR ;
                         CDR ;
                         PUSH nat 0 ;
                         DIG 3 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR }
                       { DROP 4 ; PUSH string "FA2_DUP_TOKEN_ID" ; FAILWITH } ;
                     NIL operation ;
                     PAIR } }
               { DIG 3 ;
                 DIG 5 ;
                 DROP 2 ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 ITER { DUP ;
                        DUG 2 ;
                        GET 4 ;
                        PAIR ;
                        SWAP ;
                        DUP ;
                        DUG 2 ;
                        GET 3 ;
                        DIG 2 ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        DUP 5 ;
                        SWAP ;
                        EXEC } ;
                 DIG 4 ;
                 DROP ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 DIG 2 ;
                 ITER { SWAP ;
                        DUP ;
                        DUP 3 ;
                        GET 3 ;
                        GET ;
                        IF_NONE
                          { DROP 2 ; DUP 4 ; FAILWITH }
                          { DUP 3 ; GET 4 ; ADD ; SOME ; DIG 2 ; GET 3 ; UPDATE } } ;
                 DIG 4 ;
                 DROP ;
                 DUP 3 ;
                 CDR ;
                 DIG 3 ;
                 CAR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } ;
             UNPAIR ;
             DIG 2 ;
             CDR ;
             DIG 2 ;
             PAIR ;
             SWAP ;
             PAIR } } }

