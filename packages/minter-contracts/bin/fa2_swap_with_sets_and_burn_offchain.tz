{ parameter
    (or (or %baseSwap
           (or (or (pair %accept (nat %swap_id) (set %tokens (pair nat nat))) (set %add_set nat))
               (or (or %admin (unit %confirm_admin) (address %set_admin)) (nat %cancel)))
           (pair %start
              (pair %swap_offer
                 (list %assets_offered (pair (nat %token_id) (nat %amount)))
                 (list %assets_requested nat))
              (nat %remaining_offers)))
        (list %offchain_accept
           (pair (pair %accept_param (nat %swap_id) (set %tokens (pair nat nat)))
                 (pair %permit (key %signerKey) (signature %signature))))) ;
  storage
    (pair (pair (pair (pair %admin (address %admin) (option %pending_admin address))
                      (address %burn_address))
                (pair (address %fa2_address) (nat %next_set_id)))
          (pair (pair (nat %next_swap_id) (big_map %sets nat (set nat)))
                (big_map %swaps
                   nat
                   (pair (pair %swap_offers
                            (pair %swap_offer
                               (list %assets_offered (pair (nat %token_id) (nat %amount)))
                               (list %assets_requested nat))
                            (nat %remaining_offers))
                         (address %seller))))) ;
  code { LAMBDA
           (pair address (option address))
           unit
           { CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair bool string)
           unit
           { UNPAIR ; NOT ; IF { FAILWITH } { DROP ; UNIT } } ;
         PUSH string "XTZ_TRANSFER" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         PAIR ;
         SWAP ;
         DUP ;
         DUG 2 ;
         SWAP ;
         EXEC ;
         DROP ;
         LAMBDA
           (pair (pair (pair address address) (pair nat string)) address)
           (lambda (list (pair nat nat)) operation)
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PAIR 5 ;
             LAMBDA
               (pair (pair nat (pair string (pair address (pair address address)))) (list (pair nat nat)))
               operation
               { UNPAIR ;
                 UNPAIR 5 ;
                 DIG 5 ;
                 DIG 2 ;
                 DIG 5 ;
                 CONTRACT %transfer
                   (list (pair (address %from_)
                               (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
                 IF_NONE { FAILWITH } { SWAP ; DROP } ;
                 SWAP ;
                 MAP { DUP 3 ;
                       SWAP ;
                       DUP ;
                       DUG 2 ;
                       CDR ;
                       MUL ;
                       SWAP ;
                       CAR ;
                       PAIR ;
                       DUP 5 ;
                       PAIR } ;
                 DIG 2 ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 DIG 2 ;
                 PAIR ;
                 SWAP ;
                 PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 DIG 3 ;
                 CONS ;
                 TRANSFER_TOKENS } ;
             SWAP ;
             APPLY } ;
         DUP ;
         LAMBDA
           (pair (lambda
                    (pair (pair (pair address address) (pair nat string)) address)
                    (lambda (list (pair nat nat)) operation))
                 (pair (pair (pair address address) (pair nat address)) string))
           (lambda (list (pair nat nat)) operation)
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PAIR 6 ;
             LAMBDA
               (pair (pair nat
                           (pair address
                                 (pair address
                                       (pair address
                                             (pair string
                                                   (lambda
                                                      (pair (pair (pair address address) (pair nat string)) address)
                                                      (lambda (list (pair nat nat)) operation)))))))
                     (list (pair nat nat)))
               operation
               { UNPAIR ;
                 UNPAIR 6 ;
                 DIG 6 ;
                 DIG 2 ;
                 DIG 5 ;
                 DIG 3 ;
                 PAIR ;
                 DIG 4 ;
                 DIG 4 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 EXEC } ;
             SWAP ;
             APPLY } ;
         SWAP ;
         APPLY ;
         LAMBDA
           (pair (pair nat (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address))
                 (pair address
                       (pair (pair (pair (pair address (option address)) address) (pair address nat))
                             (pair (pair nat (big_map nat (set nat)))
                                   (big_map nat (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address))))))
           (pair (pair (pair (pair address (option address)) address) (pair address nat))
                 (pair (pair nat (big_map nat (set nat)))
                       (big_map nat (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address))))
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             CDR ;
             PUSH nat 1 ;
             DUP 4 ;
             CAR ;
             CDR ;
             COMPARE ;
             GT ;
             IF { DUP ;
                  CDR ;
                  CDR ;
                  DUP 4 ;
                  CDR ;
                  PUSH nat 1 ;
                  DUP 6 ;
                  CAR ;
                  CDR ;
                  SUB ;
                  ABS ;
                  DIG 5 ;
                  CAR ;
                  CAR ;
                  PAIR ;
                  PAIR ;
                  SOME ;
                  DIG 3 ;
                  UPDATE ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR }
                { DIG 2 ;
                  DROP ;
                  DUP ;
                  CDR ;
                  CDR ;
                  DIG 2 ;
                  NONE (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address) ;
                  SWAP ;
                  UPDATE ;
                  SWAP ;
                  DUP ;
                  DUG 2 ;
                  CDR ;
                  CAR ;
                  PAIR ;
                  SWAP ;
                  CAR ;
                  PAIR } } ;
         DUP 4 ;
         DIG 3 ;
         DUP 4 ;
         PAIR 3 ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (pair address address) (pair nat address)) string)
                          (lambda (list (pair nat nat)) operation))
                       (pair (lambda
                                (pair (pair (pair address address) (pair nat string)) address)
                                (lambda (list (pair nat nat)) operation))
                             (lambda (pair bool string) unit)))
                 (pair (pair (pair (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address) (set (pair nat nat)))
                             (pair address bool))
                       (pair (list operation)
                             (pair (pair (pair (pair address (option address)) address) (pair address nat))
                                   (pair (pair nat (big_map nat (set nat)))
                                         (big_map nat (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address)))))))
           (list operation)
           { UNPAIR ;
             UNPAIR 3 ;
             DIG 3 ;
             UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             CDR ;
             NIL nat ;
             DIG 3 ;
             ITER { CDR ; CONS } ;
             PUSH string "NUMBER_OF_TOKENS_SENT_MUST_EQUAL_NUMBER_REQUESTED" ;
             DUP 4 ;
             CAR ;
             CAR ;
             CDR ;
             SIZE ;
             DUP 3 ;
             SIZE ;
             COMPARE ;
             EQ ;
             PAIR ;
             DUP 7 ;
             SWAP ;
             EXEC ;
             DROP ;
             DUP 3 ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             ITER { SWAP ;
                    IF_CONS
                      { DUP 5 ;
                        CDR ;
                        CAR ;
                        CDR ;
                        SWAP ;
                        GET ;
                        IF_NONE { PUSH string "INVALID_SET_ID" ; FAILWITH } {} ;
                        PUSH string "INVALID_TOKEN" ;
                        SWAP ;
                        DIG 3 ;
                        MEM ;
                        PAIR ;
                        DUP 8 ;
                        SWAP ;
                        EXEC ;
                        DROP }
                      { DROP ; PUSH string "INTERNAL_ERROR" ; FAILWITH } } ;
             DIG 6 ;
             DROP 2 ;
             DIG 2 ;
             CAR ;
             CAR ;
             CAR ;
             PUSH string "SWAP_OFFERED_FA2_INVALID" ;
             DUP 4 ;
             CAR ;
             CDR ;
             CAR ;
             PUSH nat 1 ;
             PAIR ;
             SENDER ;
             SELF_ADDRESS ;
             PAIR ;
             PAIR ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             CAR ;
             CDR ;
             CAR ;
             PUSH string "SWAP_REQUESTED_FA2_INVALID" ;
             PUSH nat 1 ;
             PAIR ;
             DIG 4 ;
             CAR ;
             CAR ;
             CDR ;
             SENDER ;
             DIG 2 ;
             UNPAIR ;
             DIG 7 ;
             DUG 5 ;
             PAIR 6 ;
             LAMBDA
               (pair (pair nat
                           (pair string
                                 (pair address
                                       (pair address
                                             (pair address
                                                   (lambda
                                                      (pair (pair (pair address address) (pair nat string)) address)
                                                      (lambda (list (pair nat nat)) operation)))))))
                     (list nat))
               operation
               { UNPAIR ;
                 UNPAIR 6 ;
                 DIG 6 ;
                 MAP { PUSH nat 1 ; SWAP ; PAIR } ;
                 DIG 5 ;
                 DIG 3 ;
                 DIG 3 ;
                 PAIR ;
                 DIG 4 ;
                 DIG 4 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 2 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 EXEC } ;
             SWAP ;
             APPLY ;
             DIG 2 ;
             EXEC ;
             NIL operation ;
             SWAP ;
             CONS ;
             SWAP ;
             CONS } ;
         SWAP ;
         APPLY ;
         DIG 5 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 5 ;
                 DROP ;
                 IF_LEFT
                   { DIG 4 ;
                     DROP ;
                     DIG 4 ;
                     DROP ;
                     IF_LEFT
                       { SWAP ;
                         SENDER ;
                         DIG 2 ;
                         UNPAIR ;
                         DUP 4 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         GET ;
                         IF_NONE { PUSH string "SWAP_NOT_EXIST" ; FAILWITH } {} ;
                         DUP 5 ;
                         NIL operation ;
                         PAIR ;
                         PUSH bool False ;
                         DUP 6 ;
                         PAIR ;
                         DIG 4 ;
                         DUP 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DIG 4 ;
                         DIG 4 ;
                         PAIR ;
                         DIG 2 ;
                         DIG 3 ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         PAIR }
                       { DIG 2 ;
                         DROP ;
                         DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         DIG 3 ;
                         DUP 4 ;
                         SWAP ;
                         SOME ;
                         SWAP ;
                         UPDATE ;
                         DUP 4 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         DUP ;
                         CDR ;
                         PUSH nat 1 ;
                         DIG 3 ;
                         ADD ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } }
                   { DIG 2 ;
                     DROP ;
                     DIG 2 ;
                     DROP ;
                     IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         IF_LEFT
                           { DROP ;
                             DIG 2 ;
                             DROP ;
                             CDR ;
                             IF_NONE
                               { PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SENDER ; PAIR }
                                    { PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 4 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SOME ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } ;
                         UNPAIR ;
                         DUP 3 ;
                         CDR ;
                         DUP 4 ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         DIG 4 ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         PAIR }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         DIG 4 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         SWAP ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         GET ;
                         IF_NONE { PUSH string "SWAP_NOT_EXIST" ; FAILWITH } {} ;
                         DUP 3 ;
                         CDR ;
                         CDR ;
                         DIG 2 ;
                         NONE (pair (pair (pair (list (pair nat nat)) (list nat)) nat) address) ;
                         SWAP ;
                         UPDATE ;
                         DUP 3 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         PAIR ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         PUSH string "SWAP_OFFERED_FA2_INVALID" ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         DUP 5 ;
                         CAR ;
                         CDR ;
                         PAIR ;
                         DIG 4 ;
                         CDR ;
                         SELF_ADDRESS ;
                         PAIR ;
                         PAIR ;
                         PAIR ;
                         DIG 3 ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         EXEC ;
                         SWAP ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } }
               { DIG 2 ;
                 DROP ;
                 DIG 2 ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CAR ;
                 CAR ;
                 CAR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 PUSH string "OFFERS_MUST_BE_NONZERO" ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 CDR ;
                 COMPARE ;
                 GT ;
                 PAIR ;
                 DIG 4 ;
                 SWAP ;
                 EXEC ;
                 DROP ;
                 SENDER ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 PUSH nat 1 ;
                 DUP 6 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 ADD ;
                 PAIR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 PAIR ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 DUP 5 ;
                 PAIR ;
                 DIG 5 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CAR ;
                 CAR ;
                 PUSH string "SWAP_OFFERED_FA2_INVALID" ;
                 DUP 3 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 5 ;
                 CDR ;
                 PAIR ;
                 SELF_ADDRESS ;
                 DIG 5 ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DIG 3 ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 EXEC ;
                 SWAP ;
                 NIL operation ;
                 DIG 2 ;
                 CONS ;
                 PAIR } }
           { DIG 4 ;
             DROP ;
             DIG 4 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             CAR ;
             CAR ;
             DUP 6 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             NIL operation ;
             PAIR ;
             SWAP ;
             ITER { SWAP ;
                    UNPAIR ;
                    SWAP ;
                    DIG 2 ;
                    SWAP ;
                    DUP ;
                    DUG 2 ;
                    CAR ;
                    CAR ;
                    CAR ;
                    DUP 7 ;
                    SWAP ;
                    EXEC ;
                    DROP ;
                    DUP ;
                    CAR ;
                    PACK ;
                    BLAKE2B ;
                    PUSH nat 0 ;
                    DUP 3 ;
                    CDR ;
                    DUG 2 ;
                    PAIR ;
                    SELF_ADDRESS ;
                    CHAIN_ID ;
                    PAIR ;
                    PAIR ;
                    PACK ;
                    DUP ;
                    DUP 3 ;
                    CDR ;
                    DIG 3 ;
                    CAR ;
                    CHECK_SIGNATURE ;
                    NOT ;
                    IF { PUSH string "MISSIGNED" ; PAIR ; FAILWITH } { DROP } ;
                    DUP ;
                    CDR ;
                    CAR ;
                    HASH_KEY ;
                    IMPLICIT_ACCOUNT ;
                    ADDRESS ;
                    DUP 3 ;
                    DUP 3 ;
                    CAR ;
                    CAR ;
                    SWAP ;
                    CDR ;
                    CDR ;
                    SWAP ;
                    GET ;
                    IF_NONE { PUSH string "SWAP_NOT_EXIST" ; FAILWITH } {} ;
                    DUP 4 ;
                    DIG 5 ;
                    PAIR ;
                    PUSH bool True ;
                    DUP 4 ;
                    PAIR ;
                    DUP 5 ;
                    CAR ;
                    CDR ;
                    DUP 4 ;
                    PAIR ;
                    PAIR ;
                    PAIR ;
                    DUP 6 ;
                    SWAP ;
                    EXEC ;
                    DIG 4 ;
                    DIG 3 ;
                    PAIR ;
                    DIG 2 ;
                    DIG 3 ;
                    CAR ;
                    CAR ;
                    PAIR ;
                    PAIR ;
                    DUP 4 ;
                    SWAP ;
                    EXEC ;
                    SWAP ;
                    PAIR } ;
             SWAP ;
             DROP ;
             SWAP ;
             DROP ;
             SWAP ;
             DROP } } }

