{ parameter
    (or (or %call_market
           (or (or %admin (or (unit %confirm_admin) (bool %pause)) (address %set_admin))
               (pair %buy
                  (address %seller)
                  (pair %tokens
                     (address %token_for_sale_address)
                     (pair (nat %token_for_sale_token_id)
                           (pair (address %money_token_address) (nat %money_token_token_id))))))
           (or (pair %cancel
                  (address %seller)
                  (pair %tokens
                     (address %token_for_sale_address)
                     (pair (nat %token_for_sale_token_id)
                           (pair (address %money_token_address) (nat %money_token_token_id)))))
               (pair %sell
                  (nat %sale_price)
                  (pair %sale_tokens_param
                     (address %token_for_sale_address)
                     (pair (nat %token_for_sale_token_id)
                           (pair (address %money_token_address) (nat %money_token_token_id)))))))
        (big_map %update_allowed address unit)) ;
  storage
    (pair (big_map %allowlist address unit)
          (pair %market_storage
             (pair %admin (pair (address %admin) (bool %paused)) (option %pending_admin address))
             (big_map %sales
                (pair (address %seller)
                      (pair %tokens
                         (address %token_for_sale_address)
                         (pair (nat %token_for_sale_token_id)
                               (pair (address %money_token_address) (nat %money_token_token_id)))))
                nat))) ;
  code { LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ;
             CAR ;
             SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "NOT_AN_ADMIN" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair address bool) (option address))
           unit
           { CAR ; CDR ; IF { PUSH string "PAUSED" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair (pair (pair address nat) (pair nat address)) address)
           operation
           { UNPAIR ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DIG 2 ;
             CONTRACT %transfer
               (list (pair (address %from_)
                           (list %txs (pair (address %to_) (pair (nat %token_id) (nat %amount)))))) ;
             IF_NONE
               { DROP 4 ; PUSH string "CANNOT_INVOKE_MONEY_FA2" ; FAILWITH }
               { PUSH mutez 0 ;
                 NIL (pair address (list (pair address (pair nat nat)))) ;
                 NIL (pair address (pair nat nat)) ;
                 DIG 4 ;
                 DIG 6 ;
                 PAIR ;
                 DIG 6 ;
                 PAIR ;
                 CONS ;
                 DIG 4 ;
                 PAIR ;
                 CONS ;
                 TRANSFER_TOKENS } } ;
         LAMBDA
           (pair (pair address (big_map address unit)) string)
           unit
           { UNPAIR ; UNPAIR ; GET ; IF_NONE { FAILWITH } { SWAP ; DROP } } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             IF_LEFT
               { SWAP ;
                 DROP ;
                 DIG 3 ;
                 DROP ;
                 IF_LEFT { DROP ; UNIT } { DROP ; UNIT } }
               { IF_LEFT
                   { DROP 2 ; DIG 2 ; DROP ; UNIT }
                   { PUSH string "SALE_ADDRESS_NOT_ALLOWED" ;
                     DUP 3 ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DUP 6 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     PUSH string "MONEY_ADDRESS_NOT_ALLOWED" ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     DIG 3 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     UNIT } } ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             SWAP ;
             IF_LEFT
               { IF_LEFT
                   { DIG 3 ;
                     DROP ;
                     DIG 3 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SWAP ;
                     IF_LEFT
                       { IF_LEFT
                           { DROP ;
                             DIG 3 ;
                             DROP ;
                             DUP ;
                             CDR ;
                             IF_NONE
                               { DROP ; PUSH string "NO_PENDING_ADMIN" ; FAILWITH }
                               { SENDER ;
                                 COMPARE ;
                                 EQ ;
                                 IF { NONE address ; SWAP ; CAR ; CDR ; SENDER ; PAIR ; PAIR }
                                    { DROP ; PUSH string "NOT_A_PENDING_ADMIN" ; FAILWITH } } ;
                             NIL operation ;
                             PAIR }
                           { SWAP ;
                             DUP ;
                             DUG 2 ;
                             DIG 5 ;
                             SWAP ;
                             EXEC ;
                             DROP ;
                             SWAP ;
                             DUP ;
                             DUG 2 ;
                             CDR ;
                             SWAP ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             PAIR } }
                       { SWAP ;
                         DUP ;
                         DUG 2 ;
                         DIG 5 ;
                         SWAP ;
                         EXEC ;
                         DROP ;
                         SOME ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         NIL operation ;
                         PAIR } ;
                     UNPAIR ;
                     DIG 2 ;
                     CDR ;
                     DIG 2 ;
                     PAIR ;
                     SWAP ;
                     PAIR }
                   { DIG 5 ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE { PUSH string "NO_SALE" ; FAILWITH } {} ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     DIG 2 ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP 5 ;
                     SWAP ;
                     EXEC ;
                     SENDER ;
                     SELF_ADDRESS ;
                     PUSH nat 1 ;
                     PAIR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DUP 5 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DUP 4 ;
                     CDR ;
                     DIG 3 ;
                     NONE nat ;
                     SWAP ;
                     UPDATE ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     DIG 2 ;
                     CONS ;
                     PAIR } }
               { IF_LEFT
                   { DIG 5 ;
                     DROP ;
                     DUP ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF { PUSH unit Unit }
                        { PUSH string "OR A SELLER" ;
                          DUP 3 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          COMPARE ;
                          NEQ ;
                          IF { PUSH string " " ; CONCAT ; PUSH string "NOT_AN_ADMIN" ; CONCAT ; FAILWITH }
                             { DROP ; UNIT } } ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     GET ;
                     IF_NONE
                       { DROP 2 ; SWAP ; DROP ; PUSH string "NO_SALE" ; FAILWITH }
                       { DROP ;
                         SENDER ;
                         SWAP ;
                         DUP ;
                         DUG 2 ;
                         CAR ;
                         COMPARE ;
                         EQ ;
                         IF { SENDER ;
                              SELF_ADDRESS ;
                              PUSH nat 1 ;
                              PAIR ;
                              DUP 3 ;
                              CDR ;
                              CDR ;
                              CAR ;
                              DUP 4 ;
                              CDR ;
                              CAR ;
                              PAIR ;
                              PAIR ;
                              PAIR ;
                              DIG 4 ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              CDR ;
                              DIG 2 ;
                              NONE nat ;
                              SWAP ;
                              UPDATE ;
                              DIG 2 ;
                              CAR ;
                              PAIR ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR }
                            { DROP 2 ; SWAP ; DROP ; PUSH string "NOT_OWNER" ; FAILWITH } } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DROP ;
                     SELF_ADDRESS ;
                     SENDER ;
                     PUSH nat 1 ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DIG 4 ;
                     SWAP ;
                     EXEC ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     SENDER ;
                     PAIR ;
                     DUP 4 ;
                     CDR ;
                     DIG 3 ;
                     CAR ;
                     DIG 2 ;
                     SWAP ;
                     SOME ;
                     SWAP ;
                     UPDATE ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR } } ;
             UNPAIR ;
             SWAP ;
             DIG 2 ;
             CAR ;
             PAIR ;
             SWAP ;
             PAIR }
           { DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             DIG 2 ;
             DROP ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CAR ;
             DIG 3 ;
             SWAP ;
             EXEC ;
             DROP ;
             SWAP ;
             CDR ;
             SWAP ;
             PAIR ;
             NIL operation ;
             PAIR } } }

