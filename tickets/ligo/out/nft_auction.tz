{ parameter
    (or (or (or (contract %buy (ticket nat)) (contract %cancel (ticket nat)))
            (or (pair %configure
                   (nat %opening_price)
                   (pair (nat %set_reserve_price)
                         (pair (timestamp %set_start_time) (pair (int %set_round_time) (ticket %ticket nat)))))
                (nat %drop_price)))
        (unit %start)) ;
  storage
    (pair (pair %data
             (address %admin)
             (pair (nat %current_price)
                   (pair (nat %reserve_price)
                         (pair (bool %in_progress) (pair (timestamp %start_time) (int %round_time))))))
          (big_map %tickets nat (ticket nat))) ;
  code { UNPAIR ;
         SWAP ;
         UNPAIR ;
         DIG 2 ;
         IF_LEFT
           { IF_LEFT
               { IF_LEFT
                   { NOW ;
                     AMOUNT ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     NEQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     PUSH mutez 1 ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CAR ;
                     MUL ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 4 ;
                     DUP ;
                     DUG 5 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     DIG 2 ;
                     COMPARE ;
                     LE ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     CONTRACT unit ;
                     IF_NONE
                       { DROP 4 ; PUSH string "contract does not match" ; FAILWITH }
                       { SWAP ;
                         PUSH unit Unit ;
                         TRANSFER_TOKENS ;
                         DIG 3 ;
                         NONE (ticket nat) ;
                         PUSH nat 0 ;
                         GET_AND_UPDATE ;
                         IF_NONE
                           { DROP 4 ; PUSH string "ticket does not exist" ; FAILWITH }
                           { DIG 3 ;
                             PUSH mutez 0 ;
                             DIG 2 ;
                             TRANSFER_TOKENS ;
                             SWAP ;
                             DIG 3 ;
                             DUP ;
                             DUG 4 ;
                             CDR ;
                             CDR ;
                             CDR ;
                             CDR ;
                             PUSH bool False ;
                             PAIR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 4 ;
                             DUP ;
                             DUG 5 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 4 ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             NIL operation ;
                             DIG 2 ;
                             CONS ;
                             DIG 2 ;
                             CONS ;
                             PAIR } } }
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 2 ;
                     NONE (ticket nat) ;
                     PUSH nat 0 ;
                     GET_AND_UPDATE ;
                     IF_NONE
                       { DROP 3 ; PUSH string "ticket does not exist" ; FAILWITH }
                       { DIG 2 ;
                         PUSH mutez 0 ;
                         DIG 2 ;
                         TRANSFER_TOKENS ;
                         SWAP ;
                         DIG 2 ;
                         DUP ;
                         DUG 3 ;
                         CDR ;
                         CDR ;
                         CDR ;
                         CDR ;
                         PUSH bool False ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         DUP ;
                         DUG 4 ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 3 ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         NIL operation ;
                         DIG 2 ;
                         CONS ;
                         PAIR } } }
               { IF_LEFT
                   { SWAP ;
                     DUP ;
                     DUG 2 ;
                     CAR ;
                     SOURCE ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     NOT ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     SWAP ;
                     UNPAIR ;
                     DIG 6 ;
                     DIG 2 ;
                     SOME ;
                     PUSH nat 0 ;
                     UPDATE ;
                     SWAP ;
                     DIG 2 ;
                     PAIR ;
                     PUSH bool False ;
                     PAIR ;
                     DIG 2 ;
                     PAIR ;
                     DIG 2 ;
                     PAIR ;
                     DIG 2 ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR }
                   { NOW ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CAR ;
                     SENDER ;
                     COMPARE ;
                     EQ ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     COMPARE ;
                     GE ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 2 ;
                     DUP ;
                     DUG 3 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     ADD ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     COMPARE ;
                     GT ;
                     IF {} { PUSH string "failed assertion" ; FAILWITH } ;
                     DIG 3 ;
                     DIG 3 ;
                     DUP ;
                     DUG 4 ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     DIG 3 ;
                     CAR ;
                     PAIR ;
                     DUP ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     DUP ;
                     DUG 2 ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     NIL operation ;
                     PAIR } } }
           { DROP ;
             NOW ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CAR ;
             SOURCE ;
             COMPARE ;
             EQ ;
             IF {} { PUSH string "failed assertion" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             NOT ;
             IF {} { PUSH string "failed assertion" ; FAILWITH } ;
             SWAP ;
             DUP ;
             DUG 2 ;
             CDR ;
             CDR ;
             CDR ;
             CDR ;
             CAR ;
             SWAP ;
             DUP ;
             DUG 2 ;
             COMPARE ;
             GE ;
             IF {} { PUSH string "failed assertion" ; FAILWITH } ;
             DIG 2 ;
             NONE (ticket nat) ;
             PUSH nat 0 ;
             GET_AND_UPDATE ;
             IF_NONE
               { DROP 3 ; PUSH string "no ticket" ; FAILWITH }
               { SOME ;
                 PUSH nat 0 ;
                 UPDATE ;
                 DIG 2 ;
                 DUP ;
                 DUG 3 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 PUSH bool True ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 DUP ;
                 DUG 4 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DIG 3 ;
                 CAR ;
                 PAIR ;
                 DUP ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DIG 3 ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 DUP ;
                 DUG 2 ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 SWAP ;
                 CAR ;
                 PAIR ;
                 PAIR ;
                 NIL operation ;
                 PAIR } } } }

